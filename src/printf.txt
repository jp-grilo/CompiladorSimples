INICIOPROG	 ->	 inicioprog linha 1
INICIOARGS	 ->	 inicioargs linha 3
INTEIRO	 ->	 inteiro linha 4
IDENTIFICADOR	 ->	 avulso linha 4
PONTO_E_VIRG	 ->	 ; linha 4
LITERAL	 ->	 literal linha 5
IDENTIFICADOR	 ->	 pliteral linha 5
VIRGULA	 ->	 , linha 5
IDENTIFICADOR	 ->	 sliteral linha 5
PONTO_E_VIRG	 ->	 ; linha 5
FIMARGS	 ->	 fimargs linha 6
INICIOVARS	 ->	 iniciovars linha 8
INTEIRO	 ->	 inteiro linha 9
IDENTIFICADOR	 ->	 potencia linha 9
PONTO_E_VIRG	 ->	 ; linha 9
REAL	 ->	 real linha 10
IDENTIFICADOR	 ->	 valor linha 10
VIRGULA	 ->	 , linha 10
IDENTIFICADOR	 ->	 resultado linha 10
PONTO_E_VIRG	 ->	 ; linha 10
FIMVARS	 ->	 fimvars linha 11
IDENTIFICADOR	 ->	 potencia linha 13
ATRIBUICAO	 ->	 = linha 13
INTEGER	 ->	 1 linha 13
PONTO_E_VIRG	 ->	 ; linha 13
IDENTIFICADOR	 ->	 valor linha 14
ATRIBUICAO	 ->	 = linha 14
DOUBLE	 ->	 1.0 linha 14
PONTO_E_VIRG	 ->	 ; linha 14
IDENTIFICADOR	 ->	 resultado linha 15
ATRIBUICAO	 ->	 = linha 15
DOUBLE	 ->	 2.0 linha 15
PONTO_E_VIRG	 ->	 ; linha 15
SE	 ->	 se linha 17
ABRE_PAR	 ->	 ( linha 17
IDENTIFICADOR	 ->	 potencia linha 17
OP_RELACIONAL	 ->	 == linha 17
INTEGER	 ->	 2 linha 17
FECHA_PAR	 ->	 ) linha 17
ENTAO	 ->	 entao linha 17
IDENTIFICADOR	 ->	 valor linha 18
ATRIBUICAO	 ->	 = linha 18
DOUBLE	 ->	 3.0 linha 18
PONTO_E_VIRG	 ->	 ; linha 18
FIM_SE	 ->	 fimse linha 19
SE	 ->	 se linha 21
ABRE_PAR	 ->	 ( linha 21
IDENTIFICADOR	 ->	 potencia linha 21
OP_RELACIONAL	 ->	 < linha 21
INTEGER	 ->	 3 linha 21
FECHA_PAR	 ->	 ) linha 21
ENTAO	 ->	 entao linha 21
IDENTIFICADOR	 ->	 valor linha 22
ATRIBUICAO	 ->	 = linha 22
INTEGER	 ->	 4 linha 22
DIV	 ->	 / linha 22
IDENTIFICADOR	 ->	 valor linha 22
PONTO_E_VIRG	 ->	 ; linha 22
IDENTIFICADOR	 ->	 potencia linha 23
ATRIBUICAO	 ->	 = linha 23
IDENTIFICADOR	 ->	 potencia linha 23
MULT	 ->	 * linha 23
ABRE_PAR	 ->	 ( linha 23
SUB	 ->	 - linha 23
INTEGER	 ->	 5 linha 23
FECHA_PAR	 ->	 ) linha 23
PONTO_E_VIRG	 ->	 ; linha 23
ENQUANTO	 ->	 enquanto linha 24
ABRE_PAR	 ->	 ( linha 24
IDENTIFICADOR	 ->	 potencia linha 24
OP_RELACIONAL	 ->	 > linha 24
INTEGER	 ->	 0 linha 24
FECHA_PAR	 ->	 ) linha 24
FACA	 ->	 faca linha 24
IDENTIFICADOR	 ->	 resultado linha 25
ATRIBUICAO	 ->	 = linha 25
IDENTIFICADOR	 ->	 resultado linha 25
MULT	 ->	 * linha 25
IDENTIFICADOR	 ->	 valor linha 25
PONTO_E_VIRG	 ->	 ; linha 25
IDENTIFICADOR	 ->	 potencia linha 26
ATRIBUICAO	 ->	 = linha 26
IDENTIFICADOR	 ->	 potencia linha 26
SUB	 ->	 - linha 26
INTEGER	 ->	 6 linha 26
PONTO_E_VIRG	 ->	 ; linha 26
FIM_ENQUANTO	 ->	 fimenquanto linha 27
FIM_SE	 ->	 fimse linha 28
ENQUANTO	 ->	 enquanto linha 30
ABRE_PAR	 ->	 ( linha 30
IDENTIFICADOR	 ->	 potencia linha 30
OP_RELACIONAL	 ->	 > linha 30
INTEGER	 ->	 7 linha 30
FECHA_PAR	 ->	 ) linha 30
FACA	 ->	 faca linha 30
IDENTIFICADOR	 ->	 resultado linha 31
ATRIBUICAO	 ->	 = linha 31
IDENTIFICADOR	 ->	 resultado linha 31
MULT	 ->	 * linha 31
IDENTIFICADOR	 ->	 valor linha 31
PONTO_E_VIRG	 ->	 ; linha 31
IDENTIFICADOR	 ->	 potencia linha 32
ATRIBUICAO	 ->	 = linha 32
IDENTIFICADOR	 ->	 potencia linha 32
SUB	 ->	 - linha 32
INTEGER	 ->	 8 linha 32
PONTO_E_VIRG	 ->	 ; linha 32
SE	 ->	 se linha 33
ABRE_PAR	 ->	 ( linha 33
IDENTIFICADOR	 ->	 resultado linha 33
OP_RELACIONAL	 ->	 > linha 33
INTEGER	 ->	 9 linha 33
FECHA_PAR	 ->	 ) linha 33
ENTAO	 ->	 entao linha 33
ESCREVA	 ->	 escreva linha 34
STRING	 ->	 "Este valor eh grande\n" linha 34
PONTO_E_VIRG	 ->	 ; linha 34
FIM_SE	 ->	 fimse linha 35
FIM_ENQUANTO	 ->	 fimenquanto linha 36
ESCREVA	 ->	 escreva linha 38
STRING	 ->	 "Resultado: " linha 38
PONTO_E_VIRG	 ->	 ; linha 38
ESCREVA	 ->	 escreva linha 39
IDENTIFICADOR	 ->	 resultado linha 39
PONTO_E_VIRG	 ->	 ; linha 39
ESCREVA	 ->	 escreva linha 40
IDENTIFICADOR	 ->	 potencia linha 40
PONTO_E_VIRG	 ->	 ; linha 40
ESCREVA	 ->	 escreva linha 41
IDENTIFICADOR	 ->	 potencia linha 41
SOMA	 ->	 + linha 41
IDENTIFICADOR	 ->	 potencia linha 41
PONTO_E_VIRG	 ->	 ; linha 41
ESCREVA	 ->	 escreva linha 42
STRING	 ->	 "\n" linha 42
PONTO_E_VIRG	 ->	 ; linha 42
FIMPROG	 ->	 fimprog linha 44
