/* Define os lexemas */
L    [a-zA-Z]
D    [0-9]
S    [~`!@#$%^&*()_\-+\\/\[\]|'?,><.,]

%%

/* Regras para os lexemas fornecidos */
NUMERO         {D}+(\.{D}+)?((E|e)(+|-)?{D}+)?
LITERAL        \"({L}|{D}|{S}|=|\t)*\"
IDENTIFICADOR  {L}({L}|{D}|_)*
OP_RELACIONAL  <|>|>=|<=|==|<>
OP_ARITIMETICO  \+|\-|\*|\/
ATRIBUICAO     =
ABRE_PAR       \(
FECHA_PAR      \)
VIRGULA        ,
PONTO_E_VIRG   ;
VAZIO          ( |\t|\r|\n)+
COMENTARIO     \{({L}|{D}|{S}| |\t)*\}

{NUMERO}                { ret_print("NUMERO"); }
{LITERAL}               { tipo_declarado = TIPO_STRING ;ret_print("STRING"); }
{IDENTIFICADOR}         { ret_print("IDENTIFICADOR"); }
{OP_RELACIONAL}         { ret_print("OP_RELACIONAL"); }
{OP_ARITIMETICO}        { ret_print("OP_ARITMETICO"); }
{ATRIBUICAO}            { ret_print("ATRIBUICAO"); }
{ABRE_PAR}              { ret_print("ABRE_PAR"); }
{FECHA_PAR}             { ret_print("FECHA_PAR"); }
{VIRGULA}               { ret_print("VIRGULA"); }
{PONTO_E_VIRG}          { ret_print("PONTO_E_VIRG"); }
{VAZIO}                 { ret_print("VAZIO"); }
{COMENTARIO}            { tipo_declarado = TIPO_COMENTARIO; ret_print("COMENTARIO"); }

{NUMERO}                { ret_print("NUMERO"); }
{LITERAL}               { tipo_declarado = TIPO_STRING ;ret_print("STRING"); }
{IDENTIFICADOR}         { ret_print("IDENTIFICADOR"); }
{VAZIO}                 { ret_print("VAZIO"); }
{COMENTARIO}            { tipo_declarado = TIPO_COMENTARIO; ret_print("COMENTARIO"); }

PROGRAMA → inicioprog LISTA_PARAM fimprog
LISTA_PARAM → inicioargs DECLARA_VAR fimargs
LISTA_PARAM → CODIGO
CODIGO → iniciovars DECLARA_VAR fimvars CODIGO
DECLARA_VAR → VAR DECLARA_VAR
DECLARA_VAR → ε
VAR → TIPO IDENTIFICADOR PONTO_E_VIRG
TIPO → inteiro | real | literal
CODIGO → INSTRUCAO CODIGO
CODIGO → ε
INSTRUCAO → escreva ABRE_PAR EXPRESSAO FECHA_PAR PONTO_E_VIRG
INSTRUCAO → IDENTIFICADOR ATRIBUICAO EXPRESSAO PONTO_E_VIRG
INSTRUCAO → se CONDICAO entao CODIGO fimse
INSTRUCAO → enquanto CONDICAO faca CODIGO fimenquanto
CONDICAO → ABRE_PAR EXPRESSAO OP_RELACIONAL EXPRESSAO FECHA_PAR
EXPRESSAO → TERMO MAIS_MENOS
MAIS_MENOS → OP_ARITIMETICO TERMO MAIS_MENOS
MAIS_MENOS → ε
TERMO → FATOR MULT_DIV
MULT_DIV → OP_ARITIMETICO FATOR MULT_DIV
MULT_DIV → ε
FATOR → ABRE_PAR EXPRESSAO FECHA_PAR
FATOR → NUMERO
FATOR → IDENTIFICADOR
FATOR → LITERAL
INSTRUCAO → IDENTIFICADOR IDENTIFICADOR


PROGRAMA:
    inicioprog LISTA_PARAM fimprog
;

LISTA_PARAM:
    inicioargs DECLARA_VAR fimargs LISTA_VAR
    |
    LISTA_VAR
;

LISTA_VAR:
    iniciovars DECLARA_VAR fimvars CODIGO
    |
    CODIGO
;

DECLARA_VAR:
    TIPO_VAR IDENTIFICADOR PONTO_E_VIRG DECLARA_VAR
    |
    ε
;

TIPO_VAR:
    inteiro
    |
    real
    |
    literal
;

CODIGO:
    COMANDO CODIGO 
    |
    ε
;

COMANDO:
    IDENTIFICADOR ATRIBUICAO EXPRESSAO PONTO_E_VIRG CODIGO
    |
    escreva CORPO_ESCREVA PONTO_E_VIRG
    |
    se CONDICAO entao CODIGO fimse
    |
    enquanto CONDICAO faca CODIGO fimenquanto
;

CORPO_ESCREVA:
    LITERAL
    |
    IDENTIFICADOR
    |
    EXPRESSAO
;

CONDICAO:
    ABRE_PAR IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR FECHA_PAR
;

EXPRESSAO : 
    EXPRESSAO OP_ARITMETICO EXPRESSAO { $$ = $1 + $3; }
    | '(' EXPRESSAO ')' { $$ = $2; }
    | '-' EXPRESSAO %prec UMINUS { $$ = -$2; }
    | NUMBER
;